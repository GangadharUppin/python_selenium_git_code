pipeline {
    agent any

    parameters {
        string(name: 'test_marker', defaultValue: 'smoke', description: 'Pytest marker to run test basd on marker')
    }
    environment {
        GITHUB_TOKEN_IS_HERE = credentials('GITHUB_TOKEN') // from Jenkins credentials
        IMAGE_NAME = "my-python-test-image"
    }

    stages {
        stage('Build and Run Docker') {
            steps {
                script {
//                     def IMAGE_NAME = "my-python-test-image"
                    echo "Build and Run Docker."
                    if (isUnix()) {
                        // For Linux/macOS
                        sh "docker build -t ${IMAGE_NAME} -f Docker/Dockerfile ."
                        sh "docker run --rm ${IMAGE_NAME}"
                    } else {
                        // For Windows
                        echo "Start of building docker image."
                        bat "docker build --no-cache -t my-python-test-image -f Docker/Dockerfile ."
                        // bat "docker build -t ${IMAGE_NAME} -f Docker/Dockerfile ."
                        echo "Docker image is built."
                        bat "docker run --rm ${IMAGE_NAME}"
                        echo "End of building docker image."
                    }
                }
            }
        }
        stage("Run pytest testcase") {
            steps{
                script{
                    def workspacePath = pwd().replace('\\', '/').replace('C:', '/c')
                    echo "workspacePath = ${workspacePath}"
                    docker.image("${env.IMAGE_NAME}").inside("-v ${workspacePath}:/app -w /app") {
                        sh """
                        pytest -vsm "${params.test_marker}"
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            junit '**/test-results/*.xml'
        }
        success {
            echo 'Build and tests successful.'
        }
        failure {
            echo 'Build or tests failed.'
        }
    }
}