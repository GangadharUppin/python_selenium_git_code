pipeline {

    agent { label 'linux' }   // Use your EC2 agent label

    stages {
        stage("Now clone the repo") {
            steps {
                sh 'git clone https://github.com/GangadharUppin/python_selenium_git_code.git'
            }
        }

        stage('Build and Run Docker') {
            steps {
                script {
                    echo "Build and Run Docker."
                    def testCommand = "/venv/bin/pytest -v tests -m ${params.test_marker} --maxfail=1 --disable-warnings --tb=short"
                    if (isUnix()) {
                        // For Linux/macOS
                        sh "docker build -t ${IMAGE_NAME} -f Docker/Dockerfile ."
                        sh "docker run --rm ${IMAGE_NAME}"
                    } else {
                        // For Windows
                        echo "Start of building docker image."
                        bat "docker build --no-cache -t ${IMAGE_NAME}  -f Docker/Dockerfile ."
                        // bat "docker build -t ${IMAGE_NAME} -f Docker/Dockerfile ."
                        echo "Docker image is built."
//                      bat "docker run --rm ${IMAGE_NAME}"
                        bat "docker run --rm ${IMAGE_NAME} ${testCommand}"
                        echo "End of building docker image."
                    }
                }
            }
        }

    }

    post {
        always {
            echo 'Cleaning up...'
            junit '**/test-results/*.xml'
        }
        success {
            echo 'Build and tests successful.'
        }
        failure {
            echo 'Build or tests failed.'
        }
    }
}